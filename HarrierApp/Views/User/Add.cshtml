@model HarrierApp.Models.UsersModel

@{
    ViewBag.Title = "Add User";
}

<h2>Add User</h2>
@using(Html.BeginForm("Add" , "User" , FormMethod.Post , new { id = "userForm" }))
{
    @Html.AntiForgeryToken()

    <style>
        .validation-error {
            color: red;
        }

        .form-group {
            margin-bottom: 15px;
        }
    </style>


    <div class="form-group">
        @Html.LabelFor(model => model.Name)
        @Html.TextBoxFor(model => model.Name , new { @class = "form-control" })
        <span class="validation-error" id="name"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email)
        @Html.TextBoxFor(model => model.Email , new { @class = "form-control" })
        <span class="validation-error" id="email"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mobile)
        @Html.TextBoxFor(model => model.Mobile , new { @class = "form-control" })
        <span class="validation-error" id="mobile"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Skills)
        <div>
            @foreach(var skill in new[] { "C" , "Cpp" , "Java" , "Html" , "Css" , "CSharp" , "JQuery" })
            {
                <label class="checkbox-inline">
                    @Html.CheckBox("Skills" , false , new { value = skill }) @skill
                </label>
            }
            <span class="validation-error" id="skill"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Role)
        <div>
            @foreach(var role in new[] { "User" , "Admin" , "SuperAdmin" })
            {
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.Role , role) @role
                </label>
            }
            <span class="validation-error" id="role"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status)
        <div>
            @foreach(var status in new[] { "Active" , "Inactive" })
            {
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.Status , status) @status
                </label>
            }
            <span class="validation-error" id="status"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password)
        @Html.PasswordFor(model => model.Password , new { @class = "form-control" })
        <span class="validation-error" id="pass"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword)
        @Html.PasswordFor(model => model.ConfirmPassword , new { @class = "form-control" })
        <span class="validation-error" id="confpass"></span>
    </div>

    <div class="form-group">
        <input type="hidden" id="FilteredSkills" name="FilteredSkills" />
    </div>

    <div class="form-group">
        <button type="button" class="btn btn-primary">Save</button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
    $(document).ready(function () {
        $("button[type='button']").click(function () {
             console.log('Submitting form...');
            validateForm();
        });

        function validateForm() {
             console.log('Validating...');
            // Reset previous error messages
            $(".validation-error").text("");

            // Validate name
            var Name = $.trim($("#Name").val());
            if (!Name) {
                $("#name").text("Please enter a name.");
                return;
            }
            if (!/^[a-zA-Z]+$/.test(Name)) {
                $("#name").text("Please enter a valid text for the name (only letters allowed).");
                return;
            }

            // Validate email
            var Email = $.trim($("#Email").val());
            if (!Email) {
                $("#email").text("Please enter an email address.");
                return;
            }
            var EmailRegex = /^[^\s]+[^\s]+\.[^\s]+$/;
            if (!EmailRegex.test(Email)) {
                $("#email").text("Please enter a valid email address.");
                return;
            }

            // Validate number
            var Number = $.trim($("#Mobile").val());
            if (!Number) {
                $("#mobile").text("Please enter a mobile number.");
                return;
            }
            if (!$.isNumeric(Number) || Number.length !== 10) {
                $("#mobile").text("Please enter a valid 10-digit mobile number.");
                return;
            }

             // Validate skills (at least 2 should be selected)
            if ($("#Skills:checked").length < 2) {
                $("#skill").text("Please select at least 2 skills.");
                return;
            }

            // Validate role (at least one should be selected)
            var SelectedRole = $("input[name='Role']:checked").val();
            if (!SelectedRole) {
                $("#role").text("Please select a role.");
                return;
            }

            // Validate status (at least one should be selected)
            var SelectedStatus = $("input[name='Status']:checked").val();
            if (!SelectedStatus) {
                $("#status").text("Please select a status.");
                return;
            }

            // Validate password (at least 4 characters and should contain a mix of uppercase, lowercase, and digits)
            var Password = $.trim($("#Password").val());
            if (!Password) {
                $("#pass").text("Please enter a password.");
                return;
            }
            if (Password.length < 4 || !/(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{4,}/.test(Password)) {
                $("#pass").text("Password should have at least 4 characters and contain a mix of uppercase, lowercase, and digits.");
                return;
            }

            // Validate confirm password (should match the password)
            var ConfirmPassword = $.trim($("#ConfirmPassword").val());
            if (!ConfirmPassword) {
                $("#confpass").text("Please confirm the password.");
                return;
            }
            if (ConfirmPassword !== Password) {
                $("#confpass").text("Passwords do not match.");
                return;
            }

            // If all validations pass, submit the form
            submitForm();
        }

        function submitForm() {
             console.log('Submitting Data');
            $.ajax({
                url: '@Url.Action("Add", "User")', 
                type: 'POST',
                data: $("#userForm").serialize(),
                success: function (result) {
                   window.location.href = '@Url.Action("Index", "User")';
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
    });
    </script>
}
